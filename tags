!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
CUBE_MAX_ACAO	rubikeco.py	/^CUBE_MAX_ACAO=36 #len(oacao)$/;"	v	language:Python
CUBE_MIN_ACAO	rubikeco.py	/^CUBE_MIN_ACAO=27$/;"	v	language:Python
FACE_MAX_ACAO	rubikeco.py	/^FACE_MAX_ACAO=27 #len(facao)$/;"	v	language:Python
FACE_MIN_ACAO	rubikeco.py	/^FACE_MIN_ACAO=0$/;"	v	language:Python
MAX_ACAO	rubikeco.py	/^MAX_ACAO=len(acao)$/;"	v	language:Python
MIN_ACAO	rubikeco.py	/^MIN_ACAO=0$/;"	v	language:Python
acao	rubikeco.py	/^acao=[u, ui, d, di, f, fi, b, bi, r, ri, l, li, m, mi, e, ei, s, si,$/;"	v	language:Python
act	rubikeco.py	/^act={'min':MIN_ACAO, 'max':MAX_ACAO}$/;"	v	language:Python
b	rubikeco.py	/^def b(c): #rotacao back horario$/;"	f	language:Python
b2	rubikeco.py	/^def b2(c): #rotacao dupla de trás$/;"	f	language:Python
bi	rubikeco.py	/^def bi(c): #rotacao back anti-horario$/;"	f	language:Python
busca	rubikeco.py	/^def busca(obj, cub, nmax, acoes):$/;"	f	language:Python
buscar	rubikeco.py	/^def buscar(obj, cub, nmax, acoes):$/;"	f	language:Python
buscarec	rubikeco.py	/^def buscarec(obj, cub, nmax, natual, acoes):$/;"	f	language:Python
cx	rubikeco.py	/^def cx(c): #rotacao do cubo inteiro, eixo x, horario (cubo tomba para trás)$/;"	f	language:Python
cx2	rubikeco.py	/^def cx2(c): #rotacao dupla do cubo inteiro, eixo x$/;"	f	language:Python
cxi	rubikeco.py	/^def cxi(c): #rotacao do cubo inteiro, eixo x, anti-horario (cubo tomba para frente)$/;"	f	language:Python
cy	rubikeco.py	/^def cy(c): #rotacao do cubo inteiro, eixo y, horario (cubo gira na mesa)$/;"	f	language:Python
cy2	rubikeco.py	/^def cy2(c): #rotacao dupla do cubo inteiro, eixo y$/;"	f	language:Python
cyi	rubikeco.py	/^def cyi(c): #rotacao do cubo inteiro, eixo y, anti-horario (cubo gira na mesa)$/;"	f	language:Python
cz	rubikeco.py	/^def cz(c): #rotacao do cubo inteiro, eixo z, horario (cubo tomba para direita)$/;"	f	language:Python
cz2	rubikeco.py	/^def cz2(c): #rotacao dupla do cubo inteiro, eixo z$/;"	f	language:Python
czi	rubikeco.py	/^def czi(c): #rotacao do cubo inteiro, eixo z, anti-horario (cubo tomba para esquerda)$/;"	f	language:Python
d	rubikeco.py	/^def d(c): #rotacao down horario$/;"	f	language:Python
d2	rubikeco.py	/^def d2(c): #rotacao dupla de baixo$/;"	f	language:Python
di	rubikeco.py	/^def di(c): #rotacao down anti-horario$/;"	f	language:Python
e	rubikeco.py	/^def e(c): #rotacao da camada do meio, eixo y, horario (como d)$/;"	f	language:Python
e2	rubikeco.py	/^def e2(c): #rotacao dupla da camada do meio, eixo y$/;"	f	language:Python
ei	rubikeco.py	/^def ei(c): #rotacao da camada do meio, eixo y, anti-horario (como d)$/;"	f	language:Python
embaralha	rubikeco.py	/^def embaralha(cub, lvl):$/;"	f	language:Python
f	rubikeco.py	/^def f(c): #rotacao front horario$/;"	f	language:Python
f2	rubikeco.py	/^def f2(c): #rotacao dupla da frente$/;"	f	language:Python
facao	rubikeco.py	/^facao=[u, ui, d, di, f, fi, b, bi, r, ri, l, li, m, mi, e, ei, s, si,$/;"	v	language:Python
fi	rubikeco.py	/^def fi(c): #rotacao front anti-horario$/;"	f	language:Python
fnacao	rubikeco.py	/^fnacao=['U', 'Ui', 'D', 'Di', 'F', 'Fi', 'B', 'Bi', 'R', 'Ri', 'L', 'Li', 'M', 'Mi', 'E', 'Ei', 'S', 'Si',$/;"	v	language:Python
imprime	rubikeco.py	/^def imprime(cubo):$/;"	f	language:Python
imprimeacoes	rubikeco.py	/^def imprimeacoes(acoes):$/;"	f	language:Python
l	rubikeco.py	/^def l(c): #rotacao left horario$/;"	f	language:Python
l2	rubikeco.py	/^def l2(c): #rotacao dupla da esquerda$/;"	f	language:Python
li	rubikeco.py	/^def li(c): #rotacao left anti-horario$/;"	f	language:Python
m	rubikeco.py	/^def m(c): #rotacao da camada do meio, eixo x, horario (como l)$/;"	f	language:Python
m2	rubikeco.py	/^def m2(c): #rotacao dupla da camada do meio, eixo x$/;"	f	language:Python
main	rubikeco.py	/^def main():$/;"	f	language:Python
mi	rubikeco.py	/^def mi(c): #rotacao da camada do meio, eixo x, anti-horario (como l)$/;"	f	language:Python
nacao	rubikeco.py	/^nacao=['U', 'Ui', 'D', 'Di', 'F', 'Fi', 'B', 'Bi', 'R', 'Ri', 'L', 'Li', 'M', 'Mi', 'E', 'Ei', 'S', 'Si',$/;"	v	language:Python
objetivo	rubikeco.py	/^def objetivo(t, obj):$/;"	f	language:Python
r	rubikeco.py	/^def r(c): #rotacao right horario$/;"	f	language:Python
r2	rubikeco.py	/^def r2(c): #rotacao dupla da direita$/;"	f	language:Python
racao	rubikeco.py	/^racao=[cx, cxi, cy, cyi, cz, czi, cx2, cy2, cz2]$/;"	v	language:Python
ri	rubikeco.py	/^def ri(c): #rotacao right anti-horario$/;"	f	language:Python
rnacao	rubikeco.py	/^rnacao=['X', 'Xi', 'Y', 'Yi', 'Z', 'Zi', 'X2', 'Y2', 'Z2']$/;"	v	language:Python
rubik	rubikeco.py	/^rubik = [['0o','1o','2o','3o','4o','5o','6o','7o','8o'],$/;"	v	language:Python
s	rubikeco.py	/^def s(c): #rotacao da camada do meio, eixo z, horario (como f)$/;"	f	language:Python
s2	rubikeco.py	/^def s2(c): #rotacao dupla da camada do meio, eixo z$/;"	f	language:Python
si	rubikeco.py	/^def si(c): #rotacao da camada do meio, eixo z, anti-horario (como f)$/;"	f	language:Python
soluciona	rubikeco.py	/^def soluciona(cub, acoes):$/;"	f	language:Python
tchange	rubikeco.py	/^tchange={'white_up':'cube', 'white_cross':'face', 'yellow_up':'cube', 'yellow_cross':'face', 'solve':'face'}$/;"	v	language:Python
typeaction	rubikeco.py	/^def typeaction(t):$/;"	f	language:Python
u	rubikeco.py	/^def u(c): #rotacao up horario$/;"	f	language:Python
u2	rubikeco.py	/^def u2(c): #rotacao dupla de cima$/;"	f	language:Python
ui	rubikeco.py	/^def ui(c): #rotacao up anti-horario$/;"	f	language:Python
